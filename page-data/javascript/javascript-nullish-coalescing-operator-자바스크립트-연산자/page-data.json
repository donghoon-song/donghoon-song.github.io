{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/javascript-nullish-coalescing-operator-자바스크립트-연산자/","result":{"data":{"site":{"siteMetadata":{"title":"사진찍는 웹 개발자의 블로그","author":"Donghoon Song","siteUrl":"https://donghoon-song.github.io","comment":{"utterances":"donghoon-song/hoon-blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"e8ee46c9-7d63-58a8-983b-8b5c2f436749","excerpt":"개발을 하다보면 변수가  또는 일 때 기본값을 설정하는 경우가 많습니다. 이를 효과적으로 처리하기 위해 ECMAScript 2020(ES11)에서는 가 도입되었습니다. 이 글에서는 의 개념, 사용법, 그리고 활용 예시를 살펴보겠습니다. Nullish Coalescing Operator란? 는 JavaScript…","html":"<p>개발을 하다보면 변수가 <code class=\"language-text\">null</code> 또는 <code class=\"language-text\">undefined</code>일 때 기본값을 설정하는 경우가 많습니다. 이를 효과적으로 처리하기 위해 ECMAScript 2020(ES11)에서는 <code class=\"language-text\">Nullish Coalescing Operator (??)</code>가 도입되었습니다. 이 글에서는 <code class=\"language-text\">Nullish Coalescing Operator</code>의 개념, 사용법, 그리고 활용 예시를 살펴보겠습니다.</p>\n<h2 id=\"nullish-coalescing-operator란\" style=\"position:relative;\"><a href=\"#nullish-coalescing-operator%EB%9E%80\" aria-label=\"nullish coalescing operator란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nullish Coalescing Operator란?</h2>\n<p><code class=\"language-text\">Nullish Coalescing Operator (??)</code>는 JavaScript에서 변수가 <code class=\"language-text\">null</code> 또는 <code class=\"language-text\">undefined</code>인 경우에만 오른쪽 피연산자를 할당합니다. 아래 예시를 보면 변수가 <code class=\"language-text\">0</code>이나 <code class=\"language-text\">''</code> 같은 값일 땐 오른쪽 피연산자를 할당하지 않는 것을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> foo <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n<span class=\"token keyword\">let</span> bar <span class=\"token operator\">=</span> foo <span class=\"token operator\">??</span> <span class=\"token string\">'default value'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 출력: 'default value'</span>\n\n<span class=\"token keyword\">let</span> foo2 <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\n<span class=\"token keyword\">let</span> bar2 <span class=\"token operator\">=</span> foo2 <span class=\"token operator\">??</span> <span class=\"token string\">'default value'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 출력: 'default value'</span>\n\n<span class=\"token keyword\">let</span> foo3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">let</span> bar3 <span class=\"token operator\">=</span> foo3 <span class=\"token operator\">??</span> <span class=\"token string\">'default value'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar3<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 출력: 0</span>\n\n<span class=\"token keyword\">let</span> foo4 <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">let</span> bar4 <span class=\"token operator\">=</span> foo4 <span class=\"token operator\">??</span> <span class=\"token string\">'default value'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar4<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 출력: ''</span></code></pre></div>\n<h3 id=\"-연산자와의-차이점\" style=\"position:relative;\"><a href=\"#-%EC%97%B0%EC%82%B0%EC%9E%90%EC%99%80%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\" 연산자와의 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>|| 연산자와의 차이점</h3>\n<p><code class=\"language-text\">||</code> 연산자와 비슷해 보이지만 다릅니다. <code class=\"language-text\">||</code>연산자는 <code class=\"language-text\">falsy</code> 값인 <code class=\"language-text\">0</code>, <code class=\"language-text\">''</code>, <code class=\"language-text\">false</code>, <code class=\"language-text\">null</code>, <code class=\"language-text\">undefined</code>, <code class=\"language-text\">NaN</code> 등을 <code class=\"language-text\">false</code>로 처리합니다. 따라서 <code class=\"language-text\">||</code> 연산자는 <code class=\"language-text\">0</code>이나 <code class=\"language-text\">''</code> 같은 값이 들어왔을 때도 오른쪽 피연산자를 할당합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> foo <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n<span class=\"token keyword\">let</span> bar <span class=\"token operator\">=</span> foo <span class=\"token operator\">||</span> <span class=\"token string\">'default value'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 출력: 'default value'</span>\n\n<span class=\"token keyword\">let</span> foo2 <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\n<span class=\"token keyword\">let</span> bar2 <span class=\"token operator\">=</span> foo2 <span class=\"token operator\">||</span> <span class=\"token string\">'default value'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 출력: 'default value'</span>\n\n<span class=\"token keyword\">let</span> foo3 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">let</span> bar3 <span class=\"token operator\">=</span> foo3 <span class=\"token operator\">||</span> <span class=\"token string\">'default value'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar3<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 출력: 'default value'</span>\n\n<span class=\"token keyword\">let</span> foo4 <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">let</span> bar4 <span class=\"token operator\">=</span> foo4 <span class=\"token operator\">||</span> <span class=\"token string\">'default value'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bar4<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 출력: 'default value'</span></code></pre></div>\n<p><a href=\"https://ko.javascript.info/nullish-coalescing-operator\">https://ko.javascript.info/nullish-coalescing-operator</a> 문서에서 좋은 표현을 찾았는데요. <code class=\"language-text\">||</code> 연산자는 첫 번째 <code class=\"language-text\">truthy</code> 값을 반환하는 반면, <code class=\"language-text\">??</code> 연산자는 첫 번째 <code class=\"language-text\">defined</code> 값을 반환한다고 생각하면 이해하기 쉽습니다.</p>\n<h2 id=\"활용-예시\" style=\"position:relative;\"><a href=\"#%ED%99%9C%EC%9A%A9-%EC%98%88%EC%8B%9C\" aria-label=\"활용 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>활용 예시</h2>\n<h3 id=\"로컬-저장소-값-처리\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EC%BB%AC-%EC%A0%80%EC%9E%A5%EC%86%8C-%EA%B0%92-%EC%B2%98%EB%A6%AC\" aria-label=\"로컬 저장소 값 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로컬 저장소 값 처리</h3>\n<p>로컬 저장소에서 값이 없을 때 <code class=\"language-text\">null</code>이기 때문에 기본값을 쉽게 처리할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> storedValue <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> storedValue <span class=\"token operator\">??</span> <span class=\"token string\">'Default Value'</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 출력: 'Default Value' (로컬 저장소에 값이 없을 때)</span></code></pre></div>\n<h3 id=\"환경-설정-값-처리\" style=\"position:relative;\"><a href=\"#%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95-%EA%B0%92-%EC%B2%98%EB%A6%AC\" aria-label=\"환경 설정 값 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>환경 설정 값 처리</h3>\n<p>환경 설정에서 설정되지 않은 값이 있을 때 기본값으로 처리하기 쉽습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  apiEndpoint<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">API_ENDPOINT</span> <span class=\"token operator\">??</span> <span class=\"token string\">'https://default.api.com'</span><span class=\"token punctuation\">,</span>\n  timeout<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">TIMEOUT</span> <span class=\"token operator\">??</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>apiEndpoint<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 환경 변수에 따라 다름, 기본 값은 'https://default.api.com'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>timeout<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 환경 변수에 따라 다름, 기본 값은 5000</span></code></pre></div>\n<h3 id=\"0이-할당될-수-있는-변수-처리\" style=\"position:relative;\"><a href=\"#0%EC%9D%B4-%ED%95%A0%EB%8B%B9%EB%90%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%EB%B3%80%EC%88%98-%EC%B2%98%EB%A6%AC\" aria-label=\"0이 할당될 수 있는 변수 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0이 할당될 수 있는 변수 처리</h3>\n<p>예를 들어, 사용자의 만족도 조사 점수로 0부터 5까지의 값을 받는데, 사용자가 응답하지 않았을 때 <code class=\"language-text\">0</code>이 할당될 수 있습니다. 이때 <code class=\"language-text\">??</code> 연산자를 사용하면 기본값을 설정할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">displayScore</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">score</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> finalScore <span class=\"token operator\">=</span> score <span class=\"token operator\">??</span> <span class=\"token string\">'조사에 참여하지 않았습니다.'</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">만족도 점수: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>finalScore<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">displayScore</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 출력: 만족도 점수: 5</span>\n<span class=\"token function\">displayScore</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 출력: 만족도 점수: 0</span>\n<span class=\"token function\">displayScore</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 출력: 만족도 점수: 조사에 참여하지 않았습니다.</span>\n<span class=\"token function\">displayScore</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 출력: 만족도 점수: 조사에 참여하지 않았습니다.</span></code></pre></div>\n<h3 id=\"참고-글\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EA%B8%80\" aria-label=\"참고 글 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 글</h3>\n<p><a href=\"https://ko.javascript.info/nullish-coalescing-operator\">https://ko.javascript.info/nullish-coalescing-operator</a></p>","frontmatter":{"title":"Javascript Nullish Coalescing Operator (??) 자바스크립트 연산자","date":"June 12, 2024"}}},"pageContext":{"slug":"/javascript/javascript-nullish-coalescing-operator-자바스크립트-연산자/","previous":{"fields":{"slug":"/books/tidy-first-리뷰/"},"frontmatter":{"title":"Tidy First 리뷰"}},"next":{"fields":{"slug":"/react.js/실전-예제로-알아보는-react-hook-form-사용법/"},"frontmatter":{"title":"실전 예제로 알아보는 react hook form 사용법"}}}},"staticQueryHashes":["2486386679","3128451518"],"slicesMap":{}}