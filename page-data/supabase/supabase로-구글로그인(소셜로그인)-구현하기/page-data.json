{"componentChunkName":"component---src-templates-blog-post-js","path":"/supabase/supabase로-구글로그인(소셜로그인)-구현하기/","result":{"data":{"site":{"siteMetadata":{"title":"사진찍는 웹 개발자의 블로그","author":"Donghoon Song","siteUrl":"https://donghoon-song.github.io","comment":{"utterances":"donghoon-song/hoon-blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"c6eda0af-d50d-5ac1-a327-e7741956e940","excerpt":"supabase로 구글로그인을 구현하기 위해서는 어떤 세팅을 해야 하고 코드로는 어떻게 구현하는지 적어보았다. supabase, google cloud console 세팅하기 먼저 supabase의 Authentication - Providers에서 Google을 enable 시키면 Client ID와 Client Secret을 입력하는 창이 나온다. image Google cloud console에서 새 프로젝트를 만든다. image 그리고 에서 User Type…","html":"<p>supabase로 구글로그인을 구현하기 위해서는 어떤 세팅을 해야 하고 코드로는 어떻게 구현하는지 적어보았다.</p>\n<h2 id=\"supabase-google-cloud-console-세팅하기\" style=\"position:relative;\"><a href=\"#supabase-google-cloud-console-%EC%84%B8%ED%8C%85%ED%95%98%EA%B8%B0\" aria-label=\"supabase google cloud console 세팅하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>supabase, google cloud console 세팅하기</h2>\n<p>먼저 <a href=\"https://supabase.io/\">supabase</a>의 Authentication - Providers에서 Google을 enable 시키면 Client ID와 Client Secret을 입력하는 창이 나온다.</p>\n<p><img src=\"https://i.imgur.com/JRUJYCT.png\" alt=\"image\"></p>\n<p><a href=\"https://console.cloud.google.com/\">Google cloud console</a>에서 새 프로젝트를 만든다.</p>\n<p><img src=\"https://i.imgur.com/RU9aEwO.png\" alt=\"image\"></p>\n<p>그리고 <code class=\"language-text\">OAuth 동의 화면</code>에서 User Type 외부를 선택하고 생성한다. 검색창에 <code class=\"language-text\">OAuth</code>라고 치면 쉽게 찾을 수 있다.</p>\n<p><img src=\"https://i.imgur.com/jVyhnHl.png\" alt=\"image\"></p>\n<p><img src=\"https://i.imgur.com/fK2FBzS.png\" alt=\"image\"></p>\n<p>그리고 나서 <code class=\"language-text\">사용자 인증 정보</code>에서 OAuth 클라이언트 ID를 만든다. 검색창에 <code class=\"language-text\">credential</code>이라고 치면 쉽게 찾을 수 있다.</p>\n<p><img src=\"https://i.imgur.com/D0QKpij.png\" alt=\"image\"></p>\n<p><img src=\"https://i.imgur.com/NP54F46.png\" alt=\"image\"></p>\n<p>유형은 각자의 환경에 맞게 골라주면 된다.</p>\n<p><img src=\"https://i.imgur.com/yglDcVZ.png\" alt=\"image\"></p>\n<p>그리고 아까 열어둔 supabase 화면에서 Redirect URL을 복사해서 승인 목록에 추가해준다.</p>\n<p><img src=\"https://i.imgur.com/B6gFrrL.png\" alt=\"image\"></p>\n<p><img src=\"https://i.imgur.com/6NtXobt.png\" alt=\"image\"></p>\n<p>그리고 만들기를 하면 아래 처럼 클라이언트 ID와 비밀번호를 확인할 수 있다.</p>\n<p><img src=\"https://i.imgur.com/8WJv9bE.png\" alt=\"image\"></p>\n<p>이걸 supabase 화면에 붙여넣고 저장하면 준비는 끝이다.</p>\n<p><img src=\"https://i.imgur.com/4VmCzEf.png\" alt=\"image\"></p>\n<h2 id=\"클라이언트단\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EB%8B%A8\" aria-label=\"클라이언트단 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클라이언트단</h2>\n<p>sdk를 설치하고</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @supabase/supabase-js</code></pre></div>\n<p>아래처럼 supabase client를 만든다. 나는 next.js에서 만들었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// supabase.ts</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/supabase-js'</span>\n\n<span class=\"token keyword\">const</span> supabaseUrl <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NEXT_PUBLIC_SUPABASE_URL</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">const</span> supabaseAnonKey <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NEXT_PUBLIC_SUPABASE_ANON_KEY</span> <span class=\"token operator\">||</span> <span class=\"token string\">''</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>supabaseUrl<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Supabase URL not found.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>supabaseAnonKey<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Supabase Anon key not found.'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span>supabaseUrl<span class=\"token punctuation\">,</span> supabaseAnonKey<span class=\"token punctuation\">)</span></code></pre></div>\n<p>함수는 아래와 같이 작성하고, redirectTo options을 통해서 원하는 곳으로 redirect시킬 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleSignInWithGoogle</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> error <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">signInWithOAuth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            provider<span class=\"token operator\">:</span> <span class=\"token string\">'google'</span><span class=\"token punctuation\">,</span>\n            options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                redirectTo<span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:3000/auth/callback'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>큰 틀은 이렇고, 아래 onAuthStateChange method로 세션을 가져올 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">onAuthStateChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event <span class=\"token operator\">==</span> <span class=\"token string\">'SIGNED_OUT'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>user\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>보통 SPA의 경우 App.js 같은데서 store에 값을 넣어주는 거 같고</p>\n<p>next.js의 경우 아래 문서를 참고해서 추가적인 로직을 구현하면 된다.</p>\n<p><a href=\"https://supabase.com/docs/guides/auth/auth-helpers/nextjs-pages\">next.js pages directory를 사용하는 경우</a></p>\n<p><a href=\"https://supabase.com/docs/guides/auth/auth-helpers/nextjs\">next.js app router를 사용하는 경우</a></p>","frontmatter":{"title":"supabase로 구글로그인(소셜로그인) 구현하기","date":"June 06, 2023"}}},"pageContext":{"slug":"/supabase/supabase로-구글로그인(소셜로그인)-구현하기/","previous":{"fields":{"slug":"/growth/alwayz를 만드는 레브잇팀은-어떻게-성장했는가/"},"frontmatter":{"title":"alwayz를 만드는 레브잇팀은 어떻게 성장했는가"}},"next":{"fields":{"slug":"/supabase/db-trigger를-활용해-supabase-signUp-후에--users-table에-데이터-추가하기/"},"frontmatter":{"title":"db trigger를 활용해 supabase signUp 후에  users table에 데이터 추가하기"}}}},"staticQueryHashes":["2486386679","3128451518"],"slicesMap":{}}