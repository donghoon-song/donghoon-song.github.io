{"componentChunkName":"component---src-templates-blog-post-js","path":"/books/읽기-쉬운-코드-도서-리뷰/","result":{"data":{"site":{"siteMetadata":{"title":"사진찍는 웹 개발자의 블로그","author":"Donghoon Song","siteUrl":"https://donghoon-song.github.io","comment":{"utterances":"donghoon-song/hoon-blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"fb30201a-c7b0-5d1b-a021-2e6ac470b170","excerpt":"읽기 쉬운 코드 읽기 쉬운 코드(로버트 C…","html":"<div style=\"display: flex; flex-direction: column; align-items:center;\">\n  <img src=\"https://gimg.gilbut.co.kr/book/BN004042/rn_view_BN004042.jpg\" alt=\"읽기 쉬운 코드 책 사진\">\n</div>\n<h2 id=\"읽기-쉬운-코드\" style=\"position:relative;\"><a href=\"#%EC%9D%BD%EA%B8%B0-%EC%89%AC%EC%9A%B4-%EC%BD%94%EB%93%9C\" aria-label=\"읽기 쉬운 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>읽기 쉬운 코드</h2>\n<p>읽기 쉬운 코드(로버트 C.마틴 / 길벗)는 “레스토랑 예약 시스템”을 통째로 구현하는 과정을 예시로 들어 시작부터 개선과정까지를 담았습니다. 그 과정에서 어떻게 하면 좋은 코드를 짤 수 있는지를 녹여냈습니다. 프론트엔드 개발자인 제가 이 책에서 인상깊었던 내용들을 몇 자 적어보려고 합니다.</p>\n<h2 id=\"처음부터-순서대로\" style=\"position:relative;\"><a href=\"#%EC%B2%98%EC%9D%8C%EB%B6%80%ED%84%B0-%EC%88%9C%EC%84%9C%EB%8C%80%EB%A1%9C\" aria-label=\"처음부터 순서대로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>처음부터 순서대로</h2>\n<p>저는 책을 읽을 때 관심이 가는 부분을 먼저 읽는 편입니다. 하지만 이 책은 시스템을 통째로 구현하는 순서로 구성되어 있기 때문에 이미 설명했던 부분이나 이전 챕터의 코드를 참고해야 할 때가 많습니다. 그래서 처음부터 순서대로 읽으면 더 이해하기 쉬울 것입니다.</p>\n<h2 id=\"프로젝트라고-생각해서-발생하는-문제\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%9D%BC%EA%B3%A0-%EC%83%9D%EA%B0%81%ED%95%B4%EC%84%9C-%EB%B0%9C%EC%83%9D%ED%95%98%EB%8A%94-%EB%AC%B8%EC%A0%9C\" aria-label=\"프로젝트라고 생각해서 발생하는 문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트라고 생각해서 발생하는 문제</h2>\n<p>이 책은 소프트웨어 개발을 프로젝트라고 생각하는 것이 좋지 않다고 서술합니다. 프로젝트는 시작과 끝이 있어 마지막에 도달하면 작업이 끝납니다. 하지만 <code class=\"language-text\">성공한 소프트웨어는 지속되고 계속 유지보수해야</code> 합니다. 그래서 오히려 정원 가꾸기에 비유합니다. 소프트웨어를 살아 있는 유기체로 보고 계속 살아가게 하기 위해서 리팩토링을 하거나 죽은 코드를 삭제하는 것에 비유할 수 있기 때문입니다.</p>\n<h2 id=\"주기적으로-의존성-갱신하기\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EA%B8%B0%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%9D%98%EC%A1%B4%EC%84%B1-%EA%B0%B1%EC%8B%A0%ED%95%98%EA%B8%B0\" aria-label=\"주기적으로 의존성 갱신하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주기적으로 의존성 갱신하기</h2>\n<p>의존성을 갱신하는 작업은 상당히 번거롭습니다. 이 책에서는 <code class=\"language-text\">의존성 업데이트를 위한 일정을 따로 잡으라</code>고 합니다. 그렇지 않으면 다른 업무에 우선순위가 밀려 하기 힘들 것이기 때문입니다. 이 내용에 많이 공감이 갔습니다. 의존성을 관리하지 않으면 나중에 업데이트하기가 무섭기도 하고, 업데이트 했을 때 엮여 있는 의존성들 때문에 쉽지가 않았기 때문입니다. 더군다나 프론트엔드 생태계는 라이브러리 업데이트 주기가 빠르기 때문에 더더욱 신경써야겠다는 생각을 했습니다. 회사에서 업데이트 일정을 따로 잡고 실천해보려고 합니다.</p>\n<h2 id=\"문제-해결법---이분법\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0%EB%B2%95---%EC%9D%B4%EB%B6%84%EB%B2%95\" aria-label=\"문제 해결법   이분법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결법 - 이분법</h2>\n<p>코드에 문제가 생겼을 때 이분법을 활용할 수 있습니다.</p>\n<ol>\n<li>문제를 감지하거나 재현할 방법을 찾습니다.</li>\n<li>코드의 절반을 제거합니다.</li>\n<li>문제가 계속되면 2단계부터 반복합니다. 문제가 해결되면 제거한 코드를 복원하고 나머지 절반을 제거한 후 다시 2단계부터 반복합니다.</li>\n<li>문제가 재현되는 코드에서 어떤 일이 일어나는지 이해할 수 있을 정도로 충분히 코드가 작아질 때까지 반복합니다.\n실제로 저도 사용하고 있던 방법인데 책에서 이렇게 이론으로 정리하니까 무척 반가웠습니다. 또한 <code class=\"language-text\">git bisect</code> 명령을 사용하면 보다 쉽게 결함이 있는 커밋을 찾을 수 있다는 것도 배웠습니다.</li>\n</ol>\n<h2 id=\"관심사의-분리\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EC%8B%AC%EC%82%AC%EC%9D%98-%EB%B6%84%EB%A6%AC\" aria-label=\"관심사의 분리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관심사의 분리</h2>\n<p><img src=\"https://i.imgur.com/zfefMci.jpeg\" alt=\"관심사의 분리 챕터 책 사진\"></p>\n<p>중요한 동작을 숨기는 형태로 작성하면, 코드를 이해하기 어려워진다고 합니다. 대신에 순수 함수의 반환값이 다른 순수 함수의 입력으로 들어가는 형태를 가지는 순차적 조합이 더 읽기 쉽다고 합니다. 이것도 업무에서 적용해볼만한 부분이었습니다. 또한, <code class=\"language-text\">비결정적 쿼리와 부수 효과를 가진 동작들을 시스템의 바깥 부분에 가깝게 유지하고, 핵심이 되는 복잡한 논리는 순수 함수로 작성하라</code>고 합니다. 그렇게 해서 개선한 코드를 봤을 때 뇌가 더 받아들이기 편하고 읽기 쉬웠습니다.</p>\n<h2 id=\"정리하며\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC%ED%95%98%EB%A9%B0\" aria-label=\"정리하며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리하며</h2>\n<p>책의 예상 독자가 ‘숙련도를 높이고 싶은 개발자’인만큼 한번 읽어서 소화하기에는 어려운 내용이었습니다. 하지만 여러번 읽어서 내용을 이해할 때 오는 쾌감은 더 컸습니다. 조금 느리지만 한 챕터씩 계속해서 정복해보겠습니다.</p>","frontmatter":{"title":"읽기 쉬운 코드 도서 리뷰","date":"May 13, 2024"}}},"pageContext":{"slug":"/books/읽기-쉬운-코드-도서-리뷰/","previous":{"fields":{"slug":"/books/개발자-기술-면접-노트(한빛미디어)-도서-리뷰/"},"frontmatter":{"title":"개발자 기술 면접 노트(한빛미디어) 도서 리뷰"}},"next":{"fields":{"slug":"/vue.js/navigationduplicated-avoided-navigation-to-current-location---vue-router-에러/"},"frontmatter":{"title":"NavigationDuplicated Avoided navigation to current location - vue router 에러"}}}},"staticQueryHashes":["2486386679","3128451518"],"slicesMap":{}}