{"componentChunkName":"component---src-templates-blog-post-js","path":"/books/실용주의-프로그래머-리뷰-(2장)/","result":{"data":{"site":{"siteMetadata":{"title":"사진찍는 웹 개발자의 블로그","author":"Donghoon Song","siteUrl":"https://donghoon-song.github.io","comment":{"utterances":"donghoon-song/hoon-blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"8a3874a5-d29d-5fd2-a0e5-8c53a018c7e4","excerpt":"동료들과 실용주의 프로그래머라는 책을 같이 읽고 있습니다. 공부하면서 정리한 내용을 블로그에도 남겨볼까 합니다. 아직 못 읽은 부분은 계속 업데이트하려고 합니다. 2장. 실용주의 접근법 새로운 아이디어에 전력투구하기 전에 먼저 아이디어를 검증하고 피드백을 받아 보는 것이 매우 중요하다. Topic8 좋은 설계의 핵심  ETC(Easier to Change…","html":"<p>동료들과 <a href=\"https://product.kyobobook.co.kr/detail/S000001033128\">실용주의 프로그래머</a>라는 책을 같이 읽고 있습니다. 공부하면서 정리한 내용을 블로그에도 남겨볼까 합니다. 아직 못 읽은 부분은 계속 업데이트하려고 합니다.</p>\n<h1 id=\"2장-실용주의-접근법\" style=\"position:relative;\"><a href=\"#2%EC%9E%A5-%EC%8B%A4%EC%9A%A9%EC%A3%BC%EC%9D%98-%EC%A0%91%EA%B7%BC%EB%B2%95\" aria-label=\"2장 실용주의 접근법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2장. 실용주의 접근법</h1>\n<p>새로운 아이디어에 전력투구하기 전에 먼저 아이디어를 검증하고 피드백을 받아 보는 것이 매우 중요하다.</p>\n<h2 id=\"topic8-좋은-설계의-핵심\" style=\"position:relative;\"><a href=\"#topic8-%EC%A2%8B%EC%9D%80-%EC%84%A4%EA%B3%84%EC%9D%98-%ED%95%B5%EC%8B%AC\" aria-label=\"topic8 좋은 설계의 핵심 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Topic8 좋은 설계의 핵심</h2>\n<p><code class=\"language-text\">좋은 설계는 나쁜 설계보다 바꾸기 쉽다.</code></p>\n<p>ETC(Easier to Change)</p>\n<p><code class=\"language-text\">‘내가 방금 한 일이 전체 시스템을 바꾸기 쉽게 만들었을까, 어렵게 만들었을까?’</code> → 파일 저장, 테스트 작성, 버그 수정시에 물어보기</p>\n<p><code class=\"language-text\">코드의 결합도를 낮추고 응집도를 높인다.</code></p>\n<blockquote>\n<p>컴포넌트 개발할 때 신경쓰고 있지만 정말 어렵다. 버튼 등 간단한 컴포넌트는 원칙을 지키기 비교적 쉬우나, 여러 개의 컴포넌트를 같이 쓰는 등의 컴포넌트는 결합도가 높으면 사용하기는 쉬워지나, 유지보수가 안 좋음. 디자인 시스템을 개발할 때 처음에는 바뀔일이 없던 컴포넌트도 나중에는 바뀌기 시작하고, 그래서 컴포넌트를 미리 넣어놓기 보다는 위치 정도만 잡아두고, 사용할 때 그 위치에 컴포넌트를 넣는 식으로 구현</p>\n</blockquote>\n<h3 id=\"도전해-볼-것\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%A0%84%ED%95%B4-%EB%B3%BC-%EA%B2%83\" aria-label=\"도전해 볼 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도전해 볼 것</h3>\n<ul>\n<li>일상적으로 사용하는 설계 원칙\n<ul>\n<li>DRY…</li>\n</ul>\n</li>\n<li>ETC를 따르는 코드를 작성할 때 큰 도움을 주거나 걸림돌이 되는 부분?</li>\n<li>에디터에 “ETC?” 기능을 설정해 볼 것\n<ul>\n<li>webstorm file watcher → 되나?</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>FileWatcher는 컴파일러 같은건 할 수 있는데 메시지 띄우는건 못할 듯.</p>\n</blockquote>\n<h2 id=\"topic9-dry-중복의-해악\" style=\"position:relative;\"><a href=\"#topic9-dry-%EC%A4%91%EB%B3%B5%EC%9D%98-%ED%95%B4%EC%95%85\" aria-label=\"topic9 dry 중복의 해악 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Topic9 DRY: 중복의 해악</h2>\n<p>모든 지식은 시스템 내에서 단 한 번만, 애매하지 않고, 권위 있게 표현되어야 한다.</p>\n<p>주석을 달기 전에 먼저 코드에 의도를 드러낼 것.</p>\n<p>모듈이 자료 구조를 노출하면 언제나 모듈의 구현과 그 자료 구조를 사용하는 코드 사이에 결합이 생긴다. 가능하다면 언제나 객체의 속성을 읽고 쓸 때 접근자 함수를 사용할 것.</p>\n<p>개발자 간의 중복 → <code class=\"language-text\">적극적이고 빈번한 소통</code></p>\n<blockquote>\n<p>개발자 간의 중복은 엄청 공감됨. 이번에 만든 기능이 다른 분이 먼저 개발했었던 경우가 많음. 이런걸 찾기가 굉장히 힘듦. 그래서 요즘에는 다른 분들에게 먼저 물어보고 시작함.</p>\n</blockquote>\n<h3 id=\"topic10-직교성\" style=\"position:relative;\"><a href=\"#topic10-%EC%A7%81%EA%B5%90%EC%84%B1\" aria-label=\"topic10 직교성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Topic10 직교성</h3>\n<p>하나가 바뀌어도 나머지에 어떤 영향도 주지 않으면 서로 직교한다.</p>\n<p>우리가 설계하고 싶은 것은 자족적인(단일하고 잘 정의된 목적을 가진) 독립적인 컴포넌트</p>\n<p>직교적인 컴포넌트들을 결합함으로써 단위 노력당 더 많은 기능을 얻을 수 있다.(M x N)</p>\n<p><code class=\"language-text\">‘특정 기능에 대한 요구 사항을 대폭 변경하는 경우 몇 개의 모듈이 영향을 받는가?’ → 한개여야 한다.</code></p>\n<p>불필요한 것은 다른 모듈에 보여 주지 않으며, 다른 모듈의 구현에 의존하지 않는 코드를 작성할 것.(shy)</p>\n<p>직교적으로 설계하고 구현한 시스템 → 테스트하기 더 쉽다</p>\n<p>모듈 수준의 테스트나 단위 테스트가 통합 테스트보다 테스트 케이스를 만들고 수행하기 훨씬 쉽다.</p>\n<p>단위 테스트를 작성하는 행위는 직교성을 테스트해 볼 수 있는 기회</p>\n<h3 id=\"도전해-볼-것-1\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%A0%84%ED%95%B4-%EB%B3%BC-%EA%B2%83-1\" aria-label=\"도전해 볼 것 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도전해 볼 것</h3>\n<ul>\n<li>GUI가 있는 경우 여러 기능을 묶어서 사용하거나 할 때에는 수동으로 해야 함. 셸 프롬프트에서는 그걸 묶은 새로운 명령어를 만들어서 사용 가능.</li>\n</ul>\n<h3 id=\"연습-문제-1\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%8A%B5-%EB%AC%B8%EC%A0%9C-1\" aria-label=\"연습 문제 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연습 문제 1</h3>\n<ul>\n<li>Split2가 직교적이라고 생각. Split1에는 다음 줄로 이동하는 역할이 포함. 하지만 바로 다음 줄이 아니라 한 줄씩 건너뛰는 등 요구사항이 변경되면 readNextLine을 변경해야 함.</li>\n</ul>\n<h2 id=\"topic11-가역성\" style=\"position:relative;\"><a href=\"#topic11-%EA%B0%80%EC%97%AD%EC%84%B1\" aria-label=\"topic11 가역성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Topic11 가역성</h2>\n<p>되돌릴 수 없는 결정을 최대한 줄인다. → 우리의 선택은 최선이 아닐 수 있다.</p>\n<blockquote>\n<p>새로운 프로젝트의 백엔드 서버(파일 업로드가 있는)를 람다로 올렸다가 request size 제한이 있다는 걸 알아서 옮겼던 기억이…</p>\n</blockquote>\n<blockquote>\n<p>컴포넌트 설계할 때도 어렵다. 어느 정도의 미래까지 대비해야 할지</p>\n</blockquote>\n<h2 id=\"topic12-예광탄\" style=\"position:relative;\"><a href=\"#topic12-%EC%98%88%EA%B4%91%ED%83%84\" aria-label=\"topic12 예광탄 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Topic12 예광탄</h2>\n<p>요구 사항으로부터 최종 시스템의 일부 측면까지 빨리, 눈에 보이게, 반복적으로 도달하게 해 줄 무언가가 있어야 한다.</p>\n<p>요구 사항에서 <code class=\"language-text\">의문이 드는 부분</code>이나 <code class=\"language-text\">가장 위험이 커 보이는 곳</code>의 코드를 가장 먼저 작성</p>\n<p>시스템을 구성하는 요소를 모두 연결해 놓은 후라면 목표물에 얼마나 근접했는지 확인할 수 있고, 조정이 가능하다.</p>\n<p><code class=\"language-text\">목표물에 맞을 때까지 조준을 옮겨야 한다.</code></p>\n<ul>\n<li>예광탄 코드\n<ul>\n<li>기능은 별로 없지만 완결된 코드</li>\n<li>최종 시스템 골격 중 일부가 된다.</li>\n</ul>\n</li>\n<li>프로토타입\n<ul>\n<li>예광탄을 발사하기 전에 수행하는 정찰 단계</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>한 사이클을 한 기능에서 쭉 돌아보는 방식. 배포 환경에서 발견되는 문제점을 미리 발견할 수 있음. 가장 큰 위험 요소를 빨리 파악할수록 고치는데 필요한 비용은 줄어든다고 생각.</p>\n</blockquote>\n<h2 id=\"topic13-프로토타입과-포스트잇\" style=\"position:relative;\"><a href=\"#topic13-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85%EA%B3%BC-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EC%9E%87\" aria-label=\"topic13 프로토타입과 포스트잇 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Topic13 프로토타입과 포스트잇</h2>\n<p>프로토타입은 위험 요소를 분석하고 노출 시킨 후, <code class=\"language-text\">매우 저렴한 비용</code>으로 바로잡을 기회를 얻는 것</p>\n<p>당장 중요하지 않은 세부 사항이라면 일단 무시하면서 코딩할 수 있다.</p>\n<p>프로토타이핑의 대상은 <code class=\"language-text\">위험을 수반하는 모든 것</code> → <code class=\"language-text\">이를 통해 배우는 교훈</code>이 가치가 있다.</p>\n<ul>\n<li>아키텍처</li>\n<li>추가 기능</li>\n<li>외부 데이터 구조 혹은 내용</li>\n<li>외부 도구나 컴포넌트</li>\n<li>성능</li>\n<li>사용자 인터페이스</li>\n</ul>\n<h3 id=\"무시해도-좋을-것들\" style=\"position:relative;\"><a href=\"#%EB%AC%B4%EC%8B%9C%ED%95%B4%EB%8F%84-%EC%A2%8B%EC%9D%84-%EA%B2%83%EB%93%A4\" aria-label=\"무시해도 좋을 것들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>무시해도 좋을 것들</h3>\n<ul>\n<li>정확성\n<ul>\n<li>더미 데이터 사용</li>\n</ul>\n</li>\n<li>완전성\n<ul>\n<li>입력 데이터 하나와 한 가지 메뉴 항목만 작동해도 됨</li>\n</ul>\n</li>\n<li>안정성\n<ul>\n<li>오류 검사는 빼먹거나 무시</li>\n</ul>\n</li>\n<li>스타일\n<ul>\n<li>주석이나 문서가 많지 않아야 한다.</li>\n<li>프로토타입 결과를 문서로 많이 작성할 것</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"규명할-만한-사항\" style=\"position:relative;\"><a href=\"#%EA%B7%9C%EB%AA%85%ED%95%A0-%EB%A7%8C%ED%95%9C-%EC%82%AC%ED%95%AD\" aria-label=\"규명할 만한 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>규명할 만한 사항</h3>\n<ul>\n<li>주요 영역의 책임이 잘 정의되었고 적절한지</li>\n<li>주요 컴포넌트 간의 협력 관계가 잘 정의됐는지</li>\n<li>결합도는 최소화했는지</li>\n<li>중복이 발생할 만한 곳이 있는지</li>\n<li>정의된 인터페이스와 제약 사항을 수용할만 한지</li>\n<li><code class=\"language-text\">각 모듈이 실행 중에 필요한 데이터에 접근할 수 있는 경로를 갖고 있는지</code></li>\n<li><code class=\"language-text\">모듈에 데이터가 필요한 시점에 데이터 접근이 가능한지</code></li>\n</ul>\n<blockquote>\n<p>프론트 단에는 데이터 별로 필요한 시점이 있는데 개발하다 보면 필요한데 아직 못 불러오거나 하는 경우가 있음.</p>\n</blockquote>\n<blockquote>\n<p>이번에 게시판에 대댓글을 추가하는데 (댓글까지 있었음) 저와 백엔드 개발자님은 현재 디비로 충분히 대댓글까지 커버할 수 있을거라고 생각했었는데, 만들고보니 현재 구조에서는 따로 분리하는 편이 더 나을 거 같다는 판단을 함.</p>\n</blockquote>\n<blockquote>\n<p>이것도 UI를 만들어놓고 api 연동을 했었는데, UI는 텍스트만 나와도 되니까 api 연동을 맨 먼저 해보는 것이 어땠을까 하는 생각이 듦.</p>\n</blockquote>\n<p>프로토타입을 코드로 만들 때는 시작하기 전에 항상 모든 사람에게 폐기 처분할 코드임을 밝혀야 한다.</p>\n<h3 id=\"연습-문제-3\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%8A%B5-%EB%AC%B8%EC%A0%9C-3\" aria-label=\"연습 문제 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연습 문제 3</h3>\n<ol>\n<li>디자인 팀에게 피그마로 만들어줄 것을 요청</li>\n<li>react, vue</li>\n</ol>\n<h2 id=\"topic17-셸-가지고-놀기\" style=\"position:relative;\"><a href=\"#topic17-%EC%85%B8-%EA%B0%80%EC%A7%80%EA%B3%A0-%EB%86%80%EA%B8%B0\" aria-label=\"topic17 셸 가지고 놀기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Topic17. 셸 가지고 놀기</h2>\n<p>GUI 환경의 기능은 설계자가 의도한 범위를 넘어설 수 없다.</p>\n<p>도커로 서버를 켜는 명령어는 만들어놓고 유용하게 쓰고 있다. 하지만 그 이상의 활용은 못 해봄.</p>\n<h3 id=\"도전해보기\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%A0%84%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"도전해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도전해보기</h3>\n<ol>\n<li>가르쳐 줘 본 적 없음. 알아서 잘함. 자동화 할만한건 아직 없음</li>\n</ol>\n<blockquote>\n<p>셸을 사용할 일이 많이 없어서 와닿지는 않지만 저자의 의도는 알겠음.</p>\n</blockquote>\n<h2 id=\"topic18-파워-에디팅\" style=\"position:relative;\"><a href=\"#topic18-%ED%8C%8C%EC%9B%8C-%EC%97%90%EB%94%94%ED%8C%85\" aria-label=\"topic18 파워 에디팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Topic18. 파워 에디팅</h2>\n<p>유창해지는 것의 가장 큰 이점은 사용법을 생각하지 않아도 된다는 것. 속도가 빨라지면 이점이 있음</p>\n<ol>\n<li>텍스트 편집 시 문자, 단어, 줄, 문단 단위로 커서를 이동하거나 내용 선택</li>\n<li>반대쪽 괄호로 이동 → control + M</li>\n<li>control + option + [] ⇒ navigate between code blocks</li>\n<li>option + command + L ⇒ reformat code</li>\n<li>command + shift + / ⇒ 여러줄 주석</li>\n<li>shift + command + z ⇒ redo</li>\n<li>shift + command + [] ⇒ move between tabs</li>\n<li>command + L ⇒ go to line number</li>\n<li>search “sort lines” on command panel</li>\n</ol>\n<blockquote>\n<p>트랙패드없이 작업을 해봐야겠다. 분명히 생산성 향상에 큰 도움이 될 거 같다.</p>\n</blockquote>\n<h2 id=\"topic19-버전-관리\" style=\"position:relative;\"><a href=\"#topic19-%EB%B2%84%EC%A0%84-%EA%B4%80%EB%A6%AC\" aria-label=\"topic19 버전 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Topic19. 버전 관리</h2>\n<ol>\n<li>롤백하기 → revert commit</li>\n<li>신입이 들어왔을 때 초기 세팅을 하나의 셸 스크립트로 퉁칠 수 있을까? 있다면 편하긴 하겠다.</li>\n<li>다른데는 깃허브에서 어떤 기능까지 쓰는지 궁금. discussion도 쓰나? 이슈는?</li>\n</ol>\n<h2 id=\"topic20-디버깅\" style=\"position:relative;\"><a href=\"#topic20-%EB%94%94%EB%B2%84%EA%B9%85\" aria-label=\"topic20 디버깅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Topic20. 디버깅</h2>\n<ol>\n<li>비난 대신 문제를 해결할 것. 어쨌든 해결해야 한다.</li>\n<li>“그건 불가능해”라는 반응하지 말 것. 실제로 일어난 일이니까.</li>\n<li>표면에 보이는 증상만 해결하려고 하지 말고 문제의 근본 원인을 고민할 것</li>\n<li>코드를 고치기 전에 실패하는 테스트부터 한다. → ‘명령 하나’로 버그를 재현하기 위해</li>\n<li>“select”는 망가지지 않았다. 컴퓨터는 거짓말하지 않는다. 시스템 탓을 하지 말 것</li>\n<li>가정하지 말고 증명하라.</li>\n<li>버그를 미리 잡을 순 없는지 계속 고민해볼 것</li>\n</ol>\n<p>프론트는 사용자의 환경이 매우 다양하다. 값을 참조하는 것도 그 구문을 실제로 호출하는 시점에 따라 에러가 날 수 있음.</p>\n<h2 id=\"topic21-텍스트-처리\" style=\"position:relative;\"><a href=\"#topic21-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%B2%98%EB%A6%AC\" aria-label=\"topic21 텍스트 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Topic21. 텍스트 처리</h2>\n<p>기본적인 도구만으로는 해내기 힘든 종류의 변환 작업이 있을 수 있고, 이를 위해 텍스트 처리 도구가 필요하다. ex) json -> yaml 변환기</p>\n<h2 id=\"topic22-엔지니어링-일지\" style=\"position:relative;\"><a href=\"#topic22-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4%EB%A7%81-%EC%9D%BC%EC%A7%80\" aria-label=\"topic22 엔지니어링 일지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Topic22. 엔지니어링 일지</h2>\n<p>파일이나 위키말고 종이를 사용해볼 것</p>\n<ol>\n<li>기억보다 믿을 만하다.</li>\n<li>진행 중인 작업과 관련없는 발상을 일단 쌓아놓을 수 있다.</li>\n<li>고무 오리와 같은 역할</li>\n</ol>\n<blockquote>\n<p>개발자는 노트북에 적는게 편하겠지만 항상 들고 다닐 수 있는가? 라고 물어본다면 No인 거 같다.</p>\n</blockquote>","frontmatter":{"title":"실용주의 프로그래머 리뷰 (2장)","date":"January 08, 2023"}}},"pageContext":{"slug":"/books/실용주의-프로그래머-리뷰-(2장)/","previous":{"fields":{"slug":"/books/실용주의-프로그래머-리뷰-(1장)/"},"frontmatter":{"title":"실용주의 프로그래머 리뷰 (1장)"}},"next":{"fields":{"slug":"/tools/[intellij]-인텔리제이-단어-전체-바꾸기-단축키/"},"frontmatter":{"title":"[intellij] 인텔리제이 단어 찾아바꾸기 단축키"}}}},"staticQueryHashes":["2486386679","3128451518"],"slicesMap":{}}