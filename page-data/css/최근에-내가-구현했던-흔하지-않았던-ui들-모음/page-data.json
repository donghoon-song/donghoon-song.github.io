{"componentChunkName":"component---src-templates-blog-post-js","path":"/css/최근에-내가-구현했던-흔하지-않았던-ui들-모음/","result":{"data":{"site":{"siteMetadata":{"title":"사진찍는 웹 개발자의 블로그","author":"Donghoon Song","siteUrl":"https://donghoon-song.github.io","comment":{"utterances":"donghoon-song/hoon-blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"eb7ba671-71b3-53c3-9877-194505b3958d","excerpt":"프론트엔드 개발자로 일하다 보면 디자이너가 제안한 UI를 구현하는 과정에서 표준 패턴만으로는 해결하기 어려운 상황을 종종 마주치게 된다. 이런 사례들을 해결하다 보면 역시 css 세계는 드넓구나 하는 생각이 들고 css의 가능성에 대해서 더 시야가 트이는 것 같다. 그리고 거기서 찾아오는 성취감은 덤이다. 사례가 아직 많진 않지만 마주할 때마다 이것도 모아두면 유용한 참고자료가 되지 않을까 싶어서 적어보고 계속해서 업데이트 해보려고 한다. 1. 중간에 있는 텍스트 truncate(ellipsis…","html":"<p>프론트엔드 개발자로 일하다 보면 디자이너가 제안한 UI를 구현하는 과정에서 표준 패턴만으로는 해결하기 어려운 상황을 종종 마주치게 된다. 이런 사례들을 해결하다 보면 역시 css 세계는 드넓구나 하는 생각이 들고 css의 가능성에 대해서 더 시야가 트이는 것 같다. 그리고 거기서 찾아오는 성취감은 덤이다. 사례가 아직 많진 않지만 마주할 때마다 이것도 모아두면 유용한 참고자료가 되지 않을까 싶어서 적어보고 계속해서 업데이트 해보려고 한다.</p>\n<h2 id=\"1-중간에-있는-텍스트-truncateellipsis하기\" style=\"position:relative;\"><a href=\"#1-%EC%A4%91%EA%B0%84%EC%97%90-%EC%9E%88%EB%8A%94-%ED%85%8D%EC%8A%A4%ED%8A%B8-truncateellipsis%ED%95%98%EA%B8%B0\" aria-label=\"1 중간에 있는 텍스트 truncateellipsis하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 중간에 있는 텍스트 truncate(ellipsis)하기</h2>\n<p><img src=\"https://i.imgur.com/ZfI1NLE.png\" alt=\"\"></p>\n<p>보통 truncate는 이렇게 텍스트 전체에 적용하거나 끝 부분에 적용한다. 그리고 이런 효과를 주기 위해서 다음 속성들을 활용한다.</p>\n<ol>\n<li><code class=\"language-text\">overflow: hidden</code>으로 컨테이너를 벗어나는 텍스트를 숨긴다.</li>\n<li><code class=\"language-text\">text-overflow: ellipsis</code>로 숨겨진 텍스트 대신 말줄임표를 표시한다.</li>\n</ol>\n<p><img src=\"https://i.imgur.com/Xxr1aqJ.png\" alt=\"\"></p>\n<p>하지만 중간 텍스트에 truncate를 적용해야 하는 경우가 생겼다. 처음엔 어떻게 구현하지 싶었는데 같은 원리를 적용하니까 수월하게 풀렸다. 적용할 텍스트를 <code class=\"language-text\">inline-block</code>으로 만들었고 텍스트 정렬이 틀어지기 때문에 <code class=\"language-text\">vertical-align</code>을 <code class=\"language-text\">bottom</code>으로 바꿨다.(<a href=\"http://localhost:8000/css/textarea%EB%A5%BC-%EA%B0%90%EC%8B%B8%EB%8A%94-div%EC%97%90-%EC%97%AC%EB%B0%B1%EC%9D%B4-%EC%83%9D%EA%B2%A8%EB%B2%84%EB%A6%AC%EB%8A%94-%EC%9D%B4%EC%9C%A0/\">이렇게 처리하는 이유</a>) 그 다음엔 똑같이 width 제한을 주고 text-overflow 등을 조절했다.</p>\n<p>이 방식의 핵심은 텍스트를 블록 요소처럼 다루면서도 인라인 흐름을 유지하는 것이다. <code class=\"language-text\">inline-block</code>은 요소가 인라인 요소처럼 텍스트 흐름 내에 배치되면서도 블록 요소처럼 너비와 높이를 가질 수 있게 해준다. 이를 통해 텍스트의 특정 부분만 제한된 너비를 갖도록 만들 수 있다.</p>\n<h3 id=\"실제-사용-사례와-고려사항\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%A0%9C-%EC%82%AC%EC%9A%A9-%EC%82%AC%EB%A1%80%EC%99%80-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD\" aria-label=\"실제 사용 사례와 고려사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실제 사용 사례와 고려사항</h3>\n<p>이 패턴은 사용자 프로필이나 댓글 시스템에서 특히 유용하다. 예를 들어, “홍길동님이 댓글을 남겼습니다”와 같은 알림에서 사용자 이름이 너무 길 경우 중간 부분을 생략하면서도 문장의 흐름을 유지할 수 있다. 또한 이메일 주소를 표시할 때 도메인 부분은 항상 보여주면서 사용자 이름 부분만 truncate하는 경우에도 활용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.nickname</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> nowrap<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-overflow</span><span class=\"token punctuation\">:</span> ellipsis<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">vertical-align</span><span class=\"token punctuation\">:</span> bottom<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<iframe src=\"https://codesandbox.io/embed/nfwrjr?view=preview&module=%2Findex.html&hidenavigation=1\"\n     style=\"width:100%; height: 500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"중간 텍스트를 truncate하는 경우\"\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n   ></iframe>\n<h2 id=\"2-grid-열의-높이를-자식-중-가장-높은-요소에-맞추기\" style=\"position:relative;\"><a href=\"#2-grid-%EC%97%B4%EC%9D%98-%EB%86%92%EC%9D%B4%EB%A5%BC-%EC%9E%90%EC%8B%9D-%EC%A4%91-%EA%B0%80%EC%9E%A5-%EB%86%92%EC%9D%80-%EC%9A%94%EC%86%8C%EC%97%90-%EB%A7%9E%EC%B6%94%EA%B8%B0\" aria-label=\"2 grid 열의 높이를 자식 중 가장 높은 요소에 맞추기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Grid 열의 높이를 자식 중 가장 높은 요소에 맞추기</h2>\n<p>보통의 경우에는 grid를 사용할 때 자식 요소들 크기가 일정해서 높이에 대해 신경 쓸 일이 별로 없었는데 특정 케이스에서 높이가 더 긴 자식 요소가 있었고 그 행의 높이를 가장 높은 자식의 높이에 맞춰야했다. 이럴 때 <code class=\"language-text\">grid-auto-rows</code>의 <code class=\"language-text\">minmax</code>를 활용했다.</p>\n<p><code class=\"language-text\">minmax</code> 함수는 CSS Grid의 강력한 기능 중 하나로, 첫 번째 인자는 최소값, 두 번째 인자는 최대값을 의미한다. 최소 높이를 요구사항에 맞게 정하고 <code class=\"language-text\">auto</code> 값을 최대값으로 사용하면 콘텐츠에 따라 자동으로 크기가 조정된다. 이를 통해 콘텐츠의 양이 적을 때는 최소 높이를 유지하고, 콘텐츠가 많을 때는 자동으로 확장되는 유연한 레이아웃을 만들 수 있다. 아래 예시에서는 <code class=\"language-text\">grid-auto-rows: minmax(200px, auto);</code>로 스타일을 설정했다.</p>\n<iframe src=\"https://codesandbox.io/embed/kgqk9k?view=preview&module=%2Fstyles.css\"\n     style=\"width:100%; height: 500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"Grid 열의 높이를 가장 높은 자식 요소에 맞추는 경우\"\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n   ></iframe>\n<h3 id=\"브라우저-호환성\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%ED%98%B8%ED%99%98%EC%84%B1\" aria-label=\"브라우저 호환성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저 호환성</h3>\n<p><code class=\"language-text\">grid-auto-rows</code> 속성은 2017년 업데이트 버전 이후 버전에서는 대부분 작동한다. Firefox for Android 브라우저의 경우에는 79버전(Released 2020-07-28) 이후 버전에서 정상 작동한다.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-rows\">mdn 링크</a></p>","frontmatter":{"title":"최근에 내가 구현했던 흔하지 않았던 UI들 모음","date":"March 16, 2025"}}},"pageContext":{"slug":"/css/최근에-내가-구현했던-흔하지-않았던-ui들-모음/","previous":{"fields":{"slug":"/books/전문가를-위한-리액트-도서-리뷰(한빛미디어)/"},"frontmatter":{"title":"전문가를 위한 리액트 도서 리뷰(한빛미디어)"}},"next":{"fields":{"slug":"/books/패턴으로-익히고-설계로-완성하는-리액트-리뷰(한빛미디어)/"},"frontmatter":{"title":"패턴으로 익히고 설계로 완성하는 리액트 리뷰(한빛미디어)"}}}},"staticQueryHashes":["2486386679","3128451518"],"slicesMap":{}}