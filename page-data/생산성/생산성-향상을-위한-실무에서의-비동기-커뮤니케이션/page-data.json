{"componentChunkName":"component---src-templates-blog-post-js","path":"/생산성/생산성-향상을-위한-실무에서의-비동기-커뮤니케이션/","result":{"data":{"site":{"siteMetadata":{"title":"사진찍는 웹 개발자의 블로그","author":"Donghoon Song","siteUrl":"https://donghoon-song.github.io","comment":{"utterances":"donghoon-song/hoon-blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"197d021d-f80f-56de-b1a8-0dc37f4d1ea6","excerpt":"…","html":"<p>작은 조직에서 일하면 갑작스러운 대면 커뮤니케이션이 잦다. 궁금한 점이 생기거나 논의할 게 생기면 자리로 찾아가 바로 말을 거는 케이스가 많다. 그렇게 빠르게 움직이는 것이 작은 조직의 장점이기도 하다. 하지만 너무 잦다 보면 작업 흐름이 깨지기도 한다. 몰입 상태에 있다가 동료가 불러서 얘기를 하다가 다시 돌아오면 몰입 상태로 다시 들어가는데 또 시간이 걸린다. 또한 능률도 떨어진다.</p>\n<h2 id=\"컨텍스트-스위칭-비용\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%8A%A4%EC%9C%84%EC%B9%AD-%EB%B9%84%EC%9A%A9\" aria-label=\"컨텍스트 스위칭 비용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨텍스트 스위칭 비용</h2>\n<p>능률이 떨어지는 것은 컨텍스트 스위칭 비용이 있기 때문이다. 컨텍스트 스위칭을 하면 이전에 하던 작업이 머릿속에 조금씩 남는다고 한다. 그래서 다른 작업을 시작해도 이전 작업을 깔끔하게 멈추는 것이 아니게 된다.</p>\n<h2 id=\"비동기-커뮤니케이션-지향\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%BB%A4%EB%AE%A4%EB%8B%88%EC%BC%80%EC%9D%B4%EC%85%98-%EC%A7%80%ED%96%A5\" aria-label=\"비동기 커뮤니케이션 지향 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비동기 커뮤니케이션 지향</h2>\n<p>회사에서 일을 하면서 생산성이나 커뮤니케이션 방식에 대해 많이 고민한다. 그렇게 이것저것 시도해 보면서 정착한 것 중 하나는 <code class=\"language-text\">비동기 커뮤니케이션</code>을 지향하는 것이다. 여기서 비동기 커뮤니케이션이란 메일이나 글의 댓글처럼 <code class=\"language-text\">커뮤니케이션 대상이 동시에 실시간으로 커뮤니케이션하지 않는 방식</code>을 뜻하는 개념으로 썼다. 비동기 커뮤니케이션을 하면 나뿐만 아니라 동료의 <code class=\"language-text\">작업 흐름을 끊지 않고 집중력을 보장</code>할 수 있다.</p>\n<h2 id=\"비동기-커뮤니케이션의-적용\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%BB%A4%EB%AE%A4%EB%8B%88%EC%BC%80%EC%9D%B4%EC%85%98%EC%9D%98-%EC%A0%81%EC%9A%A9\" aria-label=\"비동기 커뮤니케이션의 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비동기 커뮤니케이션의 적용</h2>\n<p>내가 상대방에게 먼저 요청하는 경우와 상대방이 나에게 먼저 요청하는 경우 두 가지로 나누어 얘기해 보겠다.</p>\n<p>먼저, 내가 상대에게 무언가를 요청하는 경우에는 우선순위에 따라서 전달 방식을 결정한다.</p>\n<ol>\n<li>지금 당장 얘기해야 하는 건 어쩔 수 없이 자리로 찾아가지만 가기 전에 채팅으로 “급하게 논의해야 할 게 있어서 그런데 잠깐 시간 내 주실 수 있나요?”라고 조금이라도 미리 요청드린다.</li>\n<li>지금 당장은 아니지만 근시일 내에 얘기해야 하는 것은 채팅으로 “이런 부분에 대해서 논의가 필요한데 가능할까요? 가능하신 시간을 알려주시면 감사하겠습니다.”하고 채팅을 먼저 보낸다.</li>\n<li>그 외에는 요청 글이나 댓글을 작성한다.\n<ol>\n<li>이때 “급한 건 아니라서 시간 되실 때 봐주세요.”라든지 “급한 건 아닌데 언제까진 봐주시면 좋겠어요.”같이 상대방이 작업할 때 참고할 수 있도록 나의 우선순위를 같이 전달한다.</li>\n</ol>\n</li>\n</ol>\n<p>이제 반대의 경우이다. 나는 작업 사이클을 25분 정도로 잡아두고(<a href=\"https://ko.wikipedia.org/wiki/%ED%8F%AC%EB%AA%A8%EB%8F%84%EB%A1%9C_%EA%B8%B0%EB%B2%95\">포모도로</a>) 그 시간에는 온전히 작업에 집중하려고 한다. 채팅이나 알림은 사이클이 끝나고 한 번에 확인한다. 바로 답장할 수 있는 건 바로 답장하지만 뭔가 확인해야 하거나 작업이 필요해 그렇지 않은 경우들이 있다. 그런 경우에는 “확인해 보고 몇 시까지 답변드릴게요”라고 미리 알려 드린다. 채팅 또는 글만 읽고 작업하러 가면 상대는 내가 확인은 했는지, 뭘 하고 있는지 모르기 때문이다. 또한 작업흐름을 유지하고 싶고 급하지 않다고 생각하는 경우 “지금 이런 작업을 하고 있어서 끝나고 볼게요.”라고 보낸다. 가끔 얼마나 빨리 피드백을 드려야 하는지 모르겠는 경우가 있는데 우선순위 파악이 잘 안되는 경우에는 얼마나 급하고 중요한 건지 먼저 물어보고 참고한다. 이렇게 하면 상대방 입장에서는 작업을 언제 할지, 답장은 언제 정도에 올지 예측 가능하고 기다리는 동안 다른 일을 계획할 수 있다.</p>\n<blockquote>\n<p>예를 들어보자면, 백엔드 개발자분이 API를 개발하시는 동안 테이블에 데이터를 출력하는 작업을 하고 있었다. 커스텀이 필요하다 보니까 로직을 짜는 데 오래 걸렸고 꽤 집중해서 하고 있었다. 백엔드 개발자분이 API 개발이 다 됐다고 확인하고 알려달라고 하셨다. 그래서 “테이블에 데이터 출력하는 작업을 하고 있는데 생각보다 어려워서 작업 다 하고 확인해 볼게요.”라고 보냈다. 백엔드 개발자분은 다음 API를 작업하시면 되고 바로 확인해야 할 사항은 아니라고 생각해서 그렇게 답했다.</p>\n</blockquote>\n<h2 id=\"더-빠른-커뮤니케이션을-위한-팁\" style=\"position:relative;\"><a href=\"#%EB%8D%94-%EB%B9%A0%EB%A5%B8-%EC%BB%A4%EB%AE%A4%EB%8B%88%EC%BC%80%EC%9D%B4%EC%85%98%EC%9D%84-%EC%9C%84%ED%95%9C-%ED%8C%81\" aria-label=\"더 빠른 커뮤니케이션을 위한 팁 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>더 빠른 커뮤니케이션을 위한 팁</h2>\n<p>비동기 커뮤니케이션을 하다 보면 메시지를 주고받는 게 느리다고 느낄 수 있다. 그럴 때 더 빠르게 커뮤니케이션하기 위해서는 한번 메시지를 보낼 때 다음에 필요한 걸 미리미리 요청하는 것이다. 예를 들어서, 상대방에게 미팅을 요청하고 싶을 때, “이러이러한 것에 대해서 오늘 얘기를 나누고 싶은데 시간 괜찮으실까요?”라고만 보내면 상대방은 긍정 혹은 부정의 답변을 보낼 것이다. 긍정의 답변을 받았다면 오늘 몇 시에 시간이 되는지, 부정의 답변을 받았다면 되는 날은 언제인지 다시 물어봐야 할 것이다. 하지만 처음에 요청할 때 “이러이러한 것에 대해서 오늘 얘기를 나누고 싶은데 시간 괜찮으실까요? 가능하시다면 되는 시간을 알려주시면 감사하겠습니다. 혹시 오늘 안 된다면 다른 되는 날과 시간을 알려주시면 감사하겠습니다.”라고 필요한 정보를 미리 요청하면 커뮤니케이션 과정이 훨씬 단축된다.</p>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<p>비동기 커뮤니케이션을 지향하다 보니 작업에 집중할 수 있는 시간이 많이 늘어났다. 이렇게 쭉 적고 보니까 아래 두 가지로 요약할 수 있을 거 같다.</p>\n<ol>\n<li>서로가 커뮤니케이션 과정을 <code class=\"language-text\">예측 가능하게 하기</code></li>\n<li>서로의 <code class=\"language-text\">작업 흐름을 존중</code>해주기</li>\n</ol>","frontmatter":{"title":"생산성 향상을 위한 실무에서의 비동기 커뮤니케이션","date":"March 31, 2024"}}},"pageContext":{"slug":"/생산성/생산성-향상을-위한-실무에서의-비동기-커뮤니케이션/","previous":{"fields":{"slug":"/books/조코딩의-챗gpt-api를-활용한-수익형-웹-서비스-만들기-책-리뷰/"},"frontmatter":{"title":"조코딩의 챗GPT API를 활용한 수익형 웹 서비스 만들기 책 리뷰"}},"next":{"fields":{"slug":"/mystory/ai-프로필을-팔기-시작한-개발자-이야기/"},"frontmatter":{"title":"AI 프로필을 팔기 시작한 개발자 이야기"}}}},"staticQueryHashes":["2486386679","3128451518"],"slicesMap":{}}