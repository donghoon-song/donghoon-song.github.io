{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/2020-03-06---Vue.js-라이프사이클/","result":{"data":{"site":{"siteMetadata":{"title":"사진찍는 웹 개발자의 블로그","author":"Donghoon Song","siteUrl":"https://donghoon-song.github.io","comment":{"utterances":"donghoon-song/hoon-blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"2da948ca-aa56-5e03-91b7-e5e0854f223c","excerpt":"beforeCreate 인스턴스가 생성되고 나서 가장 처음으로 실행되는 라이프 사이클 data 속성과 methods 속성 접근 불가 돔에도 접근 불가 React.js의 constructor과 유사한 거 같습니다. created beforeCreate 단계 다음에 실행 data 속성과 methods 속성이 접근 가능 this.data 또는 this.fetchData()와 같은 로직들을 이용해 data 속성과 methods 속성에 정의된 값에 접근하여 로직 실행가능 돔 요소 접근 불가 Why…","html":"<img src=\"https://kr.vuejs.org/images/lifecycle.png\" alt=\"Vue.js 라이프사이클\">\n<h2 id=\"beforecreate\" style=\"position:relative;\"><a href=\"#beforecreate\" aria-label=\"beforecreate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>beforeCreate</h2>\n<h3 id=\"인스턴스가-생성되고-나서-가장-처음으로-실행되는-라이프-사이클\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EA%B0%80-%EC%83%9D%EC%84%B1%EB%90%98%EA%B3%A0-%EB%82%98%EC%84%9C-%EA%B0%80%EC%9E%A5-%EC%B2%98%EC%9D%8C%EC%9C%BC%EB%A1%9C-%EC%8B%A4%ED%96%89%EB%90%98%EB%8A%94-%EB%9D%BC%EC%9D%B4%ED%94%84-%EC%82%AC%EC%9D%B4%ED%81%B4\" aria-label=\"인스턴스가 생성되고 나서 가장 처음으로 실행되는 라이프 사이클 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인스턴스가 생성되고 나서 가장 처음으로 실행되는 라이프 사이클</h3>\n<ul>\n<li>data 속성과 methods 속성 접근 불가</li>\n<li>돔에도 접근 불가\n<blockquote>\n<p>React.js의 constructor과 유사한 거 같습니다.</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"created\" style=\"position:relative;\"><a href=\"#created\" aria-label=\"created permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>created</h2>\n<h3 id=\"beforecreate-단계-다음에-실행\" style=\"position:relative;\"><a href=\"#beforecreate-%EB%8B%A8%EA%B3%84-%EB%8B%A4%EC%9D%8C%EC%97%90-%EC%8B%A4%ED%96%89\" aria-label=\"beforecreate 단계 다음에 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>beforeCreate 단계 다음에 실행</h3>\n<ul>\n<li>data 속성과 methods 속성이 접근 가능</li>\n<li>this.data 또는 this.fetchData()와 같은 로직들을 이용해 data 속성과 methods 속성에 정의된 값에 접근하여 로직 실행가능</li>\n<li>돔 요소 접근 불가</li>\n<li>Why? <strong>인스턴스가 생성되었지만, 화면요소에 부착되기 전이므로</strong></li>\n<li><strong><em>서버에 데이터를 요청해 받아오는 로직을 수행하기 좋다.</em></strong> (vuex에서 actions)</li>\n<li>Why? data 속성과 methods 속성에 접근 가능한 가장 첫 라이프 사이클</li>\n</ul>\n<blockquote>\n<p>options 속성이나 콜백에 화살표 함수 사용을 지양한다. <strong>화살표 함수들은 부모 컨텍스트에 바인딩</strong>되기 때문에 this 컨텍스트가 Vue 인스턴스를 호출하지 못한다.</p>\n</blockquote>\n<h2 id=\"beforemount\" style=\"position:relative;\"><a href=\"#beforemount\" aria-label=\"beforemount permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>beforeMount</h2>\n<h3 id=\"template-속성에-지정한-마크업-속성을-render-함수로-변환한-후-el-속성에-지정한-화면-요소에-인스턴스를-부착하기-전-단계\" style=\"position:relative;\"><a href=\"#template-%EC%86%8D%EC%84%B1%EC%97%90-%EC%A7%80%EC%A0%95%ED%95%9C-%EB%A7%88%ED%81%AC%EC%97%85-%EC%86%8D%EC%84%B1%EC%9D%84-render-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%B3%80%ED%99%98%ED%95%9C-%ED%9B%84-el-%EC%86%8D%EC%84%B1%EC%97%90-%EC%A7%80%EC%A0%95%ED%95%9C-%ED%99%94%EB%A9%B4-%EC%9A%94%EC%86%8C%EC%97%90-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EB%A5%BC-%EB%B6%80%EC%B0%A9%ED%95%98%EA%B8%B0-%EC%A0%84-%EB%8B%A8%EA%B3%84\" aria-label=\"template 속성에 지정한 마크업 속성을 render 함수로 변환한 후 el 속성에 지정한 화면 요소에 인스턴스를 부착하기 전 단계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>template 속성에 지정한 마크업 속성을 render() 함수로 변환한 후 el 속성에 지정한 화면 요소에 인스턴스를 부착하기 전 단계</h3>\n<ul>\n<li>render() 함수가 호출되기 직전의 로직을 추가하기 좋다.\n<blockquote>\n<p>React.js의 componentWillMount()와 유사한 거 같다.</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"mounted\" style=\"position:relative;\"><a href=\"#mounted\" aria-label=\"mounted permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mounted</h2>\n<h3 id=\"el-속성에서-지정한-화면-요소에-인스턴스가-부착되고-나면-호출되는-단계\" style=\"position:relative;\"><a href=\"#el-%EC%86%8D%EC%84%B1%EC%97%90%EC%84%9C-%EC%A7%80%EC%A0%95%ED%95%9C-%ED%99%94%EB%A9%B4-%EC%9A%94%EC%86%8C%EC%97%90-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EA%B0%80-%EB%B6%80%EC%B0%A9%EB%90%98%EA%B3%A0-%EB%82%98%EB%A9%B4-%ED%98%B8%EC%B6%9C%EB%90%98%EB%8A%94-%EB%8B%A8%EA%B3%84\" aria-label=\"el 속성에서 지정한 화면 요소에 인스턴스가 부착되고 나면 호출되는 단계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>el 속성에서 지정한 화면 요소에 인스턴스가 부착되고 나면 호출되는 단계</h3>\n<ul>\n<li>template 속성의 돔 요소에 접근 가능</li>\n<li>돔에 인스턴스가 부착되자마자 바로 호출되므로 하위 컴포넌트나 외부 라이브러리에 의해 추가된 화면 요소들이 최종 HTML 코드로 변환되는 시점과 다를 수 있다.</li>\n</ul>\n<h2 id=\"beforeupdate\" style=\"position:relative;\"><a href=\"#beforeupdate\" aria-label=\"beforeupdate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>beforeUpdate</h2>\n<h3 id=\"인스턴스가-부착되고-나면-인스턴스에-정의한-속성들이-화면에-치환된다\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EA%B0%80-%EB%B6%80%EC%B0%A9%EB%90%98%EA%B3%A0-%EB%82%98%EB%A9%B4-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EC%97%90-%EC%A0%95%EC%9D%98%ED%95%9C-%EC%86%8D%EC%84%B1%EB%93%A4%EC%9D%B4-%ED%99%94%EB%A9%B4%EC%97%90-%EC%B9%98%ED%99%98%EB%90%9C%EB%8B%A4\" aria-label=\"인스턴스가 부착되고 나면 인스턴스에 정의한 속성들이 화면에 치환된다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인스턴스가 부착되고 나면 인스턴스에 정의한 속성들이 화면에 치환된다.</h3>\n<h3 id=\"치환된-값은-뷰의-반응성reactivity을-제공하기-위해-watch-속성으로-감시한다\" style=\"position:relative;\"><a href=\"#%EC%B9%98%ED%99%98%EB%90%9C-%EA%B0%92%EC%9D%80-%EB%B7%B0%EC%9D%98-%EB%B0%98%EC%9D%91%EC%84%B1reactivity%EC%9D%84-%EC%A0%9C%EA%B3%B5%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4-watch-%EC%86%8D%EC%84%B1%EC%9C%BC%EB%A1%9C-%EA%B0%90%EC%8B%9C%ED%95%9C%EB%8B%A4\" aria-label=\"치환된 값은 뷰의 반응성reactivity을 제공하기 위해 watch 속성으로 감시한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>치환된 값은 뷰의 반응성(Reactivity)을 제공하기 위해 $watch 속성으로 감시한다.</h3>\n<ul>\n<li>관찰하고 있는 데이터가 변경되면 가상 돔으로 화면을 다시 그리기 전에 호출되는 단계</li>\n<li>변경 예정인 새 데이터에 접근할 수 있어 변경 예정 데이터의 값과 관련된 로직을 넣을 수 있다.</li>\n</ul>\n<blockquote>\n<p>React.js의 componentWillUpdate(nextProps, nextState)와 유사한 거 같다.</p>\n</blockquote>\n<h2 id=\"updated\" style=\"position:relative;\"><a href=\"#updated\" aria-label=\"updated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>updated</h2>\n<h3 id=\"데이터가-변경되고-나서-가상-돔으로-다시-화면을-그리고-나면-실행되는-단계\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%EB%B3%80%EA%B2%BD%EB%90%98%EA%B3%A0-%EB%82%98%EC%84%9C-%EA%B0%80%EC%83%81-%EB%8F%94%EC%9C%BC%EB%A1%9C-%EB%8B%A4%EC%8B%9C-%ED%99%94%EB%A9%B4%EC%9D%84-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EB%82%98%EB%A9%B4-%EC%8B%A4%ED%96%89%EB%90%98%EB%8A%94-%EB%8B%A8%EA%B3%84\" aria-label=\"데이터가 변경되고 나서 가상 돔으로 다시 화면을 그리고 나면 실행되는 단계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터가 변경되고 나서 가상 돔으로 다시 화면을 그리고 나면 실행되는 단계</h3>\n<ul>\n<li>데이터 변경으로 인한 화면 요소 변경까지 완료된 시점</li>\n<li><strong>데이터 변경 후 화면 요소 제어와 관련된 로직을 추가하기 위해 좋음</strong></li>\n<li><strong>데이터 값을 갱신하는 로직은 가급적 beforeUpdate에 추가하고, updated에서는 변경 데이터의 화면 요소와 관련되 로직을 추가하는 것이 좋다.</strong></li>\n</ul>\n<h2 id=\"beforedestroy\" style=\"position:relative;\"><a href=\"#beforedestroy\" aria-label=\"beforedestroy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>beforeDestroy</h2>\n<h3 id=\"뷰-인스턴스가-파기되기-직전에-호출되는-단계\" style=\"position:relative;\"><a href=\"#%EB%B7%B0-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EA%B0%80-%ED%8C%8C%EA%B8%B0%EB%90%98%EA%B8%B0-%EC%A7%81%EC%A0%84%EC%97%90-%ED%98%B8%EC%B6%9C%EB%90%98%EB%8A%94-%EB%8B%A8%EA%B3%84\" aria-label=\"뷰 인스턴스가 파기되기 직전에 호출되는 단계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>뷰 인스턴스가 파기되기 직전에 호출되는 단계</h3>\n<ul>\n<li>아직 인스턴스에 접근할 수 있다.</li>\n<li>뷰 인스턴스의 데이터를 삭제하기 좋은 단계</li>\n<li>ex) removeEventListener 호출</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> funcion<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">beforeDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> funcion<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>beforeDestoy 단계에서 이벤트를 해제시켜주지 않으면, document.body에는 계속해서 해당 event가 바인딩되어 실행된다.</p>\n<h2 id=\"destroyed\" style=\"position:relative;\"><a href=\"#destroyed\" aria-label=\"destroyed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>destroyed</h2>\n<h3 id=\"뷰-인스턴스가-파괴되고-나서-호출되는-단계\" style=\"position:relative;\"><a href=\"#%EB%B7%B0-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EA%B0%80-%ED%8C%8C%EA%B4%B4%EB%90%98%EA%B3%A0-%EB%82%98%EC%84%9C-%ED%98%B8%EC%B6%9C%EB%90%98%EB%8A%94-%EB%8B%A8%EA%B3%84\" aria-label=\"뷰 인스턴스가 파괴되고 나서 호출되는 단계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>뷰 인스턴스가 파괴되고 나서 호출되는 단계</h3>\n<ul>\n<li>뷰 인스턴스에 정의한 모든 속성이 제거되고 하위에 선언한 인스턴스들 또한 모두 파괴</li>\n</ul>\n<h1 id=\"참고문서\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%AC%B8%EC%84%9C\" aria-label=\"참고문서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고문서</h1>\n<ul>\n<li><a src=\"http://www.yes24.com/Product/Goods/58206961\">Do it! Vue.js 입문</a></li>\n<li><a src=\"https://blog.martinwork.co.kr/vuejs/2018/02/05/vue-lifecycle-hooks.html\">Vue의 Lifecycle</a></li>\n<li><a src=\"https://kr.vuejs.org/v2/api/#updated\">Vue.js 공식문서</a></li>\n</ul>","frontmatter":{"title":"[Vue.js] 라이프사이클","date":"March 06, 2020"}}},"pageContext":{"slug":"/development/2020-03-06---Vue.js-라이프사이클/","previous":null,"next":{"fields":{"slug":"/development/2020-03-06---Vue.js-컴포넌트-간-통신/"},"frontmatter":{"title":"[Vue.js] 컴포넌트 간 통신"}}}},"staticQueryHashes":["2486386679","3128451518"],"slicesMap":{}}