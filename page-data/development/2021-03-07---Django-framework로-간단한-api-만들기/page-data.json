{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/2021-03-07---Django-framework로-간단한-api-만들기/","result":{"data":{"site":{"siteMetadata":{"title":"사진찍는 웹 개발자의 블로그","author":"Donghoon Song","siteUrl":"https://donghoon-song.github.io","comment":{"utterances":"donghoon-song/hoon-blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"9773f65b-a6a9-53fa-b02a-982acf78c0ad","excerpt":"본 포스트는 인프런의 플러터와 장고로 1시간만에 퀴즈 앱/서버 만들기 [무작정 풀스택] 강의를 듣고 내용을 정리한 것입니다. 퀴즈 모델에 관한 api를 만들어봅니다.  먼저 가상환경을 설정합니다. 가상환경을 설정하는 명령어는 다음과 같습니다. 그리고 Django project를 cli로 생성합니다. settings.py 파일을 수정합니다.  INSTALLED_APP  migration을 합니다. 여기까지 하면 기본적인 서버를 만들었습니다.  다음으로 Model…","html":"<p>본 포스트는 <a href=\"https://www.inflearn.com/course/%ED%94%8C%EB%9F%AC%ED%84%B0-%EC%9E%A5%EA%B3%A0-%ED%80%B4%EC%A6%88%EC%95%B1-%EC%84%9C%EB%B2%84-%ED%92%80%EC%8A%A4%ED%83%9D\">인프런의 플러터와 장고로 1시간만에 퀴즈 앱/서버 만들기 [무작정 풀스택] 강의</a>를 듣고 내용을 정리한 것입니다. 퀴즈 모델에 관한 api를 만들어봅니다.</p>\n<p><a id=\"venv-header\"></a></p>\n<h2 id=\"먼저-가상환경을-설정합니다\" style=\"position:relative;\"><a href=\"#%EB%A8%BC%EC%A0%80-%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD%EC%9D%84-%EC%84%A4%EC%A0%95%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"먼저 가상환경을 설정합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>먼저 <a href=\"#venv-content\">가상환경</a>을 설정합니다.</h2>\n<p>가상환경을 설정하는 명령어는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">//</span> 가상환경 설정\npython3 <span class=\"token operator\">-</span>m venv venv<span class=\"token punctuation\">(</span>본인의 가상환경 이름<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">//</span> 가상환경 활성화\nsource venv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>activate</code></pre></div>\n<p>그리고 Django project를 cli로 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">//</span> 프로젝트 생성 <span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span>을 꼭 적어야함<span class=\"token punctuation\">)</span>\ndjango<span class=\"token operator\">-</span>admin startproject myapi <span class=\"token punctuation\">.</span>\npython manage<span class=\"token punctuation\">.</span>py startapp quiz</code></pre></div>\n<h2 id=\"settingspy-파일을-수정합니다\" style=\"position:relative;\"><a href=\"#settingspy-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%88%98%EC%A0%95%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"settingspy 파일을 수정합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>settings.py 파일을 수정합니다.</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">//</span> 모든 호스트 허용\nALLOWED_HOSTS <span class=\"token punctuation\">[</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">//</span> 타임존 변경\nTIME_ZONE <span class=\"token operator\">=</span> <span class=\"token string\">'Asia/Seoul'</span>\n<span class=\"token operator\">//</span> 스태틱 파일 경로 추가\nSTATIC_ROOT <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'staticfiles'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">//</span> INSTALLED_APPS에 <span class=\"token string\">'quiz'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rest_framework'</span> 추가</code></pre></div>\n<p><a id=\"installed-app-header\"></a></p>\n<p><a href=\"#installed-app-content\">INSTALLED_APP</a></p>\n<p><a id=\"migration-header\"></a></p>\n<h2 id=\"migration을-합니다\" style=\"position:relative;\"><a href=\"#migration%EC%9D%84-%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"migration을 합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#migration-content\">migration</a>을 합니다.</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">//</span> migration 파일 생성\npython manage<span class=\"token punctuation\">.</span>py makemigrations\n<span class=\"token operator\">//</span> migration 진행\npython manage<span class=\"token punctuation\">.</span>py migrate\n<span class=\"token operator\">//</span> 서버 구동\npython manage<span class=\"token punctuation\">.</span>py runserver</code></pre></div>\n<p>여기까지 하면 기본적인 서버를 만들었습니다.</p>\n<p><a id=\"model-header\"></a></p>\n<h2 id=\"다음으로-model을-생성하겠습니다\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%9D%8C%EC%9C%BC%EB%A1%9C-model%EC%9D%84-%EC%83%9D%EC%84%B1%ED%95%98%EA%B2%A0%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"다음으로 model을 생성하겠습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다음으로 <a href=\"#model-content\">Model</a>을 생성하겠습니다.</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">//</span> quiz<span class=\"token operator\">/</span>models<span class=\"token punctuation\">.</span>py\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db <span class=\"token keyword\">import</span> models\n\n<span class=\"token comment\"># Create your models here.</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Quiz</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    title <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    body <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>TextField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    answer <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>IntegerField<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><a id=\"serializer-header\"></a></p>\n<h2 id=\"serializer-생성\" style=\"position:relative;\"><a href=\"#serializer-%EC%83%9D%EC%84%B1\" aria-label=\"serializer 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#serializer-content\">Serializer</a> 생성</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">//</span> serializers<span class=\"token punctuation\">.</span>py\n<span class=\"token keyword\">from</span> rest_framework <span class=\"token keyword\">import</span> serializers\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Quiz\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">QuizSerializer</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Meta</span><span class=\"token punctuation\">:</span>\n        model <span class=\"token operator\">=</span> Quiz\n        fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'body'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'answer'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Model과 Serializer를 만들었으니, 이제는 실제로 api를 만들어봅니다.</p>\n<h2 id=\"api-생성\" style=\"position:relative;\"><a href=\"#api-%EC%83%9D%EC%84%B1\" aria-label=\"api 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>api 생성</h2>\n<p><a id=\"view-header\"></a></p>\n<p><a href=\"#view-content\">view</a></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">//</span> quiz<span class=\"token operator\">/</span>views<span class=\"token punctuation\">.</span>py\n<span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>response <span class=\"token keyword\">import</span> Response\n<span class=\"token keyword\">from</span> rest_framework<span class=\"token punctuation\">.</span>decorators <span class=\"token keyword\">import</span> api_view\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Quiz\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>serializers <span class=\"token keyword\">import</span> QuizSerializer\n<span class=\"token keyword\">import</span> random\n<span class=\"token comment\"># Create your views here.</span>\n<span class=\"token decorator annotation punctuation\">@api_view</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">randomQuiz</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    totalQuizs <span class=\"token operator\">=</span> Quiz<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">//</span> sample의 두번째 인자는 length\n    randomQuizs <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>totalQuizs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">//</span> serializer에 many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>를 주면<span class=\"token punctuation\">,</span> 다수의 데이터도 직렬화해줍니다<span class=\"token punctuation\">.</span>\n    serializer <span class=\"token operator\">=</span> QuizSerializer<span class=\"token punctuation\">(</span>randomQuizs<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>serializer<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"이제-api를-url에-연결하면-됩니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%9C-api%EB%A5%BC-url%EC%97%90-%EC%97%B0%EA%B2%B0%ED%95%98%EB%A9%B4-%EB%90%A9%EB%8B%88%EB%8B%A4\" aria-label=\"이제 api를 url에 연결하면 됩니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이제 api를 url에 연결하면 됩니다.</h2>\n<p>myapi내의 <code class=\"language-text\">urls.py</code>는 전체 app에 대한 url을 관리하고, <code class=\"language-text\">quiz/urls.py</code>는 quiz app에 대한 url만 관리합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">//</span> quiz<span class=\"token operator\">/</span>urls<span class=\"token punctuation\">.</span>py\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path<span class=\"token punctuation\">,</span> include\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> randomQuiz\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;int:id>/\"</span><span class=\"token punctuation\">,</span> randomQuiz<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">//</span> myapi<span class=\"token operator\">/</span>urls<span class=\"token punctuation\">.</span>py\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path<span class=\"token punctuation\">,</span> include\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'admin/'</span><span class=\"token punctuation\">,</span> admin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">'quiz/'</span><span class=\"token punctuation\">,</span> include<span class=\"token punctuation\">(</span><span class=\"token string\">'quiz.urls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p><a id=\"dynamic-url-header\"></a></p>\n<p><a href=\"#dynamic-url-content\">django에서 동적 url 작성법</a></p>\n<h2 id=\"api-개발을-완료했습니다-이제-model-data를-생성하기-위해-admin을-등록해봅니다\" style=\"position:relative;\"><a href=\"#api-%EA%B0%9C%EB%B0%9C%EC%9D%84-%EC%99%84%EB%A3%8C%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4-%EC%9D%B4%EC%A0%9C-model-data%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4-admin%EC%9D%84-%EB%93%B1%EB%A1%9D%ED%95%B4%EB%B4%85%EB%8B%88%EB%8B%A4\" aria-label=\"api 개발을 완료했습니다 이제 model data를 생성하기 위해 admin을 등록해봅니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>api 개발을 완료했습니다. 이제 model data를 생성하기 위해 admin을 등록해봅니다.</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">//</span> quiz<span class=\"token operator\">/</span>admin<span class=\"token punctuation\">.</span>py\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Quiz\n\n<span class=\"token comment\"># Register your models here.</span>\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>Quiz<span class=\"token punctuation\">)</span></code></pre></div>\n<p>model이 변경되었기 떄문에 migration을 한번 더 진행합니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/32301380/110243829-6d95e600-7f9f-11eb-90a3-7aad363ddebe.png\" alt=\"image\"></p>\n<h2 id=\"이제-admin에-접속할-수-있는-슈퍼계정을-만듭니다\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%9C-admin%EC%97%90-%EC%A0%91%EC%86%8D%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%EC%8A%88%ED%8D%BC%EA%B3%84%EC%A0%95%EC%9D%84-%EB%A7%8C%EB%93%AD%EB%8B%88%EB%8B%A4\" aria-label=\"이제 admin에 접속할 수 있는 슈퍼계정을 만듭니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이제 admin에 접속할 수 있는 슈퍼계정을 만듭니다.</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">python manage.py createsuperuser</code></pre></div>\n<h2 id=\"서버를-구동해봅니다\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84%EB%A5%BC-%EA%B5%AC%EB%8F%99%ED%95%B4%EB%B4%85%EB%8B%88%EB%8B%A4\" aria-label=\"서버를 구동해봅니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버를 구동해봅니다.</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">python manage.py runserver</code></pre></div>\n<h2 id=\"어드민에-접속해서-model을-만들어봅니다\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%93%9C%EB%AF%BC%EC%97%90-%EC%A0%91%EC%86%8D%ED%95%B4%EC%84%9C-model%EC%9D%84-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B4%85%EB%8B%88%EB%8B%A4\" aria-label=\"어드민에 접속해서 model을 만들어봅니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어드민에 접속해서 Model을 만들어봅니다.</h2>\n<p><img src=\"https://user-images.githubusercontent.com/32301380/110244000-13e1eb80-7fa0-11eb-8ed6-ab76b5ccdbcb.png\" alt=\"image\"></p>\n<h2 id=\"model-data를-4개-이상-만들고-quiz3을-호출해봅니다\" style=\"position:relative;\"><a href=\"#model-data%EB%A5%BC-4%EA%B0%9C-%EC%9D%B4%EC%83%81-%EB%A7%8C%EB%93%A4%EA%B3%A0-quiz3%EC%9D%84-%ED%98%B8%EC%B6%9C%ED%95%B4%EB%B4%85%EB%8B%88%EB%8B%A4\" aria-label=\"model data를 4개 이상 만들고 quiz3을 호출해봅니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Model data를 4개 이상 만들고 “/quiz/3”을 호출해봅니다.</h2>\n<p>api가 잘 작동하는 것을 확인할 수 있습니다!</p>\n<p><img src=\"https://user-images.githubusercontent.com/32301380/110244192-e5b0db80-7fa0-11eb-8e5b-4acb4ae19639.png\" alt=\"image\"></p>\n<p>이렇게 django framework로 model 생성 및 api를 만들어보았습니다. 코드를 따라치다가 원리가 궁금해서 내용을 정리해보았습니다. 다음에는 flutter app부분도 내용을 정리할까 합니다.</p>\n<h2 id=\"내용-정리\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EC%9A%A9-%EC%A0%95%EB%A6%AC\" aria-label=\"내용 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내용 정리</h2>\n<p><a id=\"venv-content\"></a>\n<a href=\"#venv-header\">돌아가기</a></p>\n<details>\n<summary>\n가상환경이란\n</summary>\n가상환경은 해당 프로젝트의 Python 개발환경을 구축하기 위해 모듈을 독립적으로 관리하는 환경입니다. 가상환경을 설정하는 이유는 각 모듈이 다른 모듈에 의존성을 가지고 있기 때문에 이것저것 설치하다가 충돌이 날 수 있기 때문입니다.\n</details>\n<br/>\n<p><a id=\"installed-app-content\"></a>\n<a href=\"#installed-app-header\">돌아가기</a></p>\n<details>\n<summary>\nINSTALLED_APPS란\n</summary>\n<p><a href=\"https://docs.djangoproject.com/ko/3.1/intro/tutorial02/\">참고</a><br/>\nINSTALLED_APPS는 Django와 함께 딸려오는 다음의 앱들 등을 포함합니다.</p>\n<ul>\n<li>django.contrib.admin - 관리용 사이트</li>\n<li>django.contrib.auth - 인증 시스템</li>\n</ul>\n<p>그외 앱들\n…</p>\n<p>Django 인스턴스에서 활성화된 모든 Django application들의 이름을 담고 있습니다.</p>\n</details>\n<br/>\n<p><a id=\"migration-content\"></a>\n<a href=\"#migration-header\">돌아가기</a></p>\n<details>\n<summary>\nmigration이란\n</summary>\n<p><a href=\"https://docs.djangoproject.com/ko/3.1/intro/tutorial02/\">참고</a><br/>\nDjango framework는 기본적으로 SQLite를 사용하도록 구성되어 있습니다. migrate 명령어를 실행하면 INSTALLED_APPS를 참고해 필요한 데이터베이스 테이블을 생성합니다.</p>\n</details>\n<br/>\n<p><a id=\"model-content\"></a>\n<a href=\"#model-header\">돌아가기</a></p>\n<details>\n<summary>\nModel field reference\n</summary>\n<p><a href=\"https://docs.djangoproject.com/en/3.1/ref/models/fields\">참고</a></p>\n<ul>\n<li>CharField\n<ul>\n<li><code class=\"language-text\">class CharField(max_length=None, **options)</code></li>\n<li>small to large string field</li>\n<li>대량의 텍스트는 TextField를 사용할 것</li>\n<li>max_length는 required argument</li>\n</ul>\n</li>\n<li>TextField\n<ul>\n<li><code class=\"language-text\">class TextField(**options)</code></li>\n<li>large textfield</li>\n</ul>\n</li>\n<li>InterField\n<ul>\n<li><code class=\"language-text\">class IntegerField(**options)</code></li>\n<li>An integer</li>\n</ul>\n</li>\n</ul>\n</details>\n<br/>\n<p><a id=\"serializer-content\"></a>\n<a href=\"#serializer-header\">돌아가기</a></p>\n<details>\n<summary>\nSerializer란\n</summary>\n<p><a href=\"https://www.django-rest-framework.org/api-guide/serializers/\">참고</a><br/>\n쿼리셋, 모델 인스턴스 등의 복잡한 데이터를 JSON, XML 등의 컨텐츠 타입으로 쉽게 변환시켜주는 역할.\n여기서는 Django의 모델 데이터를 JSON 타입으로 바꿔주는(직렬화) 코드(클래스)</p>\n<h3 id=\"modelserializer\" style=\"position:relative;\"><a href=\"#modelserializer\" aria-label=\"modelserializer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ModelSerializer</h3>\n<p>이 class는 <code class=\"language-text\">Serializer</code> class와 같지만 다음 차이점이 있습니다.</p>\n<ul>\n<li>model을 기반으로 field를 자동생성합니다.</li>\n<li>validator를 자동생성합니다.</li>\n<li>간단한 <code class=\"language-text\">.create()</code>, <code class=\"language-text\">.update()</code> 메서드를 기본적으로 가지고 있습니다.</li>\n</ul>\n<p>따라서, 간단하게 Serializer를 만들 때 사용됩니다.</p>\n</details>\n<br/>\n<p><a id=\"view-content\"></a>\n<a href=\"#view-header\">돌아가기</a></p>\n<details>\n<summary>\nview란\n</summary>\n<p><a href=\"https://docs.djangoproject.com/en/3.1/topics/http/views/\">참고</a><br/>\n프론트엔드 개발자로서 view란 view template을 의미하는 줄 알았지만, Django에서의 view function은 <strong>Web request를 받고 Web response를 return</strong>하는 역할을 합니다. express framework의 route와 유사하다는 생각이 들었습니다.</p>\n</details>\n<br/>\n<p><a id=\"dynamic-url-content\"></a>\n<a href=\"#dynamic-url-header\">돌아가기</a></p>\n<details>\n<summary>\ndjango에서 동적 url 작성법\n</summary>\n<ul>\n<li>str - ’/‘를 제외한 비어있지 않은 문자열</li>\n<li>int - 0이상의 정수</li>\n<li>slug - 아스키 문자나 숫자, 하이픈, 언더스코어 등으로 이루어진 slug string\n<ul>\n<li>ex. building-your-1st-django-site</li>\n</ul>\n</li>\n<li>uuid - UUID</li>\n<li>path - ’/‘를 포함한 비어있지 않은 문자열\n<ul>\n<li>str은 부분 URL path</li>\n<li>path는 완전한 URL path</li>\n</ul>\n</li>\n</ul>\n</details>\n<br/>","frontmatter":{"title":"Django framework로 간단한 api 만들기","date":"March 07, 2021"}}},"pageContext":{"slug":"/development/2021-03-07---Django-framework로-간단한-api-만들기/","previous":{"fields":{"slug":"/development/2021-01-02---오픈소스를-번역할-때-유용한-Git-Localize-사용법/"},"frontmatter":{"title":"오픈소스를 번역할 때 유용한 Git Localize 사용법"}},"next":{"fields":{"slug":"/development/2021-03-31---Vue.js-화살표-함수(arrow-function)-주의점/"},"frontmatter":{"title":"Vue.js 화살표 함수(arrow function) 주의점"}}}},"staticQueryHashes":["2486386679","3128451518"],"slicesMap":{}}